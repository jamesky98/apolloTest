scalar ScalarName

type Query {
  # info: String!
  feed: [User!]!
  # Fetch a single link by its `id`
  # link(id: ID!): Link
}

type Mutation {
  # post(url: String!, description: String!): Link!
  #user login
  signup(user_name: String!, user_password: String!, user_mail: String!): AuthPayload
  login(user_name: String!, user_password: String!): AuthPayload
  # Update a link
  # updateLink(id: ID!, url: String, description: String): Link
  # Delete a link
  # deleteLink(id: ID!): Link
}

# type Link {
#   id: ID!
#   description: String!
#   url: String!
# }

type AuthPayload {
  token: String
  user: User
}

type User {
  user_id: ID!
  user_name: String!
  user_mail: String!
  user_password: String!
}
